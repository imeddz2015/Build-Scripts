--- gettext-tools/libgrep/cdefs.h
+++ gettext-tools/libgrep/cdefs.h
@@ -51,7 +51,7 @@
    gcc 2.8.x and egcs.  For gcc 3.2 and up we even mark C functions
    as non-throwing using a function attribute since programs can use
    the -fexceptions options for C code as well.  */
-# if !defined __cplusplus && __GNUC_PREREQ (3, 3)
+# if !defined __cplusplus && __GNUC_PREREQ (4, 0)
 #  define __THROW	__attribute__ ((__nothrow__ __LEAF))
 #  define __THROWNL	__attribute__ ((__nothrow__))
 #  define __NTH(fct)	__attribute__ ((__nothrow__ __LEAF)) fct 
--- libtextstyle/lib/libxml/timsort.h
+++ libtextstyle/lib/libxml/timsort.h
@@ -74,10 +74,6 @@
 static int compute_minrun(const uint64_t);
 
 #ifndef CLZ
-#ifdef __GNUC__
-#define CLZ __builtin_clzll
-#else
-
 static int clzll(uint64_t);
 
 /* adapted from Hacker's Delight */
@@ -124,7 +120,6 @@
 
 #define CLZ clzll
 #endif
-#endif
 
 static __inline int compute_minrun(const uint64_t size) {
   const int top_bit = 64 - CLZ(size);
--- gettext-tools/gnulib-lib/libxml/timsort.h
+++ gettext-tools/gnulib-lib/libxml/timsort.h
@@ -74,10 +74,6 @@
 static int compute_minrun(const uint64_t);
 
 #ifndef CLZ
-#ifdef __GNUC__
-#define CLZ __builtin_clzll
-#else
-
 static int clzll(uint64_t);
 
 /* adapted from Hacker's Delight */
@@ -124,7 +120,6 @@
 
 #define CLZ clzll
 #endif
-#endif
 
 static __inline int compute_minrun(const uint64_t size) {
   const int top_bit = 64 - CLZ(size);
--- gnulib-local/lib/libxml/timsort.h
+++ gnulib-local/lib/libxml/timsort.h
@@ -74,10 +74,6 @@
 static int compute_minrun(const uint64_t);
 
 #ifndef CLZ
-#ifdef __GNUC__
-#define CLZ __builtin_clzll
-#else
-
 static int clzll(uint64_t);
 
 /* adapted from Hacker's Delight */
@@ -124,7 +120,6 @@
 
 #define CLZ clzll
 #endif
-#endif
 
 static __inline int compute_minrun(const uint64_t size) {
   const int top_bit = 64 - CLZ(size);
--- gettext-tools/src/read-properties.c
+++ gettext-tools/src/read-properties.c
@@ -582,7 +582,8 @@
   /* Return the result.  */
   {
     unsigned char *utf8_string = XNMALLOC (utf8_buflen + 1, unsigned char);
-    memcpy (utf8_string, utf8_buffer, utf8_buflen);
+    if (utf8_buffer)
+      memcpy (utf8_string, utf8_buffer, utf8_buflen);
     utf8_string[utf8_buflen] = '\0';
 
     return (char *) utf8_string;
--- gettext-tools/gnulib-tests/test-canonicalize-lgpl.c
+++ gettext-tools/gnulib-tests/test-canonicalize-lgpl.c
@@ -70,10 +70,13 @@
     result = canonicalize_file_name ("");
     ASSERT (result == NULL);
     ASSERT (errno == ENOENT);
+
+#ifndef TEST_UBSAN
     errno = 0;
     result = canonicalize_file_name (null_ptr ());
     ASSERT (result == NULL);
     ASSERT (errno == EINVAL);
+#endif
   }
 
   /* Check that a non-directory with trailing slash yields NULL.  */
